---

- name: inatall package 
  apt:
    pkg: "{{ item }}"
    state: latest
    update_cache: yes
  with_items:
    - python3-dev
    - libffi-dev
    - gcc 
    - libssl-dev
    - python3-venv
  become: true

- name: create virtual env for install python packages
  shell: python3 -m venv /path/to/venv
  become: true

- name: activate and use prepared virtual env 
  shell: source /path/to/venv/bin/activate
  become: true

- name: Ensure the latest version of pip is installed
  shell: pip install -U pip
  become: true

- name: install pip on virtual env
  shell: pip install 'ansible>=4,<6'
  become: true

- name: install kolla-ansible 
  shell: pip install git+https://opendev.org/openstack/kolla-ansible@master
  become: true

- name: Creates /etc/kolla directory
  file:
    path: /etc/kolla
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: 0775
  become: true

- name: Creates /etc/ansible/ directory
  file:
    path: /etc/ansible/
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: 0775
  become: true


- name: copy global and password file to /etc/kolla
  copy:
    src: /path/to/venv/share/kolla-ansible/etc_examples/kolla
    dest: /etc/kolla
    directory_mode:
    remote_src: yes
  become: true

- name: copy multinode file to current directory 
  copy:
    src: /path/to/venv/share/kolla-ansible/ansible/inventory/
    dest: ./
    directory_mode:
    remote_src: yes
  become: true

- name: Copy global.yml.j2 as gloabal.yml file
  template:
    src: global.yml.j2
    dest: ./global.yml.sec
    owner: root
    mode: "0400"

- name: Copy multinode.j2 as multinode file
  template:
    src: multinode.j2
    dest: ./multinode.sec
    owner: root
    mode: "0400"

- name: update content of multinode file
  shell: cat ./multinode.sec > ./multinode
  become: true

- name: update content of global file
  shell: cat ./global.yml.sec > /etc/kolla/globals.yml
  become: true

- name: install ansible glalaxy dependencies
  shell: kolla-ansible install-deps
  become: true

- name: Creating ansible.cfg file with initial config
  copy:
    dest: /etc/ansible/ansible.cfg
    content: |
      [defaults]
      host_key_checking=False
      pipelining=True
      forks=100
  become: true

- name: generate passwords
  shell: kolla-genpwd
  become: true


- name: move ceph cluster config files to the right place
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0775
  become: true
  with_items:
    - /etc/kolla/config
    - /etc/kolla/config/nova
    - /etc/kolla/config/glance
    - /etc/kolla/config/cinder
    - /etc/kolla/config/cinder/cinder-volume
    - /etc/kolla/config/cinder/cinder-backup

- name: move ceph cluster config files to the right place
  shell: "{{ item }}"
  with_item:
    - cp /etc/ceph/ceph.conf /etc/kolla/config/cinder/
    - cp /etc/ceph/ceph.conf /etc/kolla/config/nova/
    - cp /etc/ceph/ceph.conf /etc/kolla/config/glance/# cp /etc/ceph/ceph.client.glance.keyring /etc/kolla/config/glance/
    - cp /etc/ceph/ceph.client.nova.keyring /etc/kolla/config/nova/
    - cp /etc/ceph/ceph.client.cinder.keyring /etc/kolla/config/nova/
    - cp /etc/ceph/ceph.client.cinder.keyring /etc/kolla/config/cinder/cinder-volume/
    - cp /etc/ceph/ceph.client.cinder.keyring /etc/kolla/config/cinder/cinder-backup/
    - cp /etc/ceph/ceph.client.cinder-backup.keyring /etc/kolla/config/cinder/cinder-backup/

- name: bootstrap servers with kolla deploy dependencies
  shell: kolla-ansible -i ./multinode bootstrap-servers
  become: true

- name: pre-deployment checks
  shell: kolla-ansible -i ./multinode prechecks
  become: true

- name: actual deploy step
  shell: kolla-ansible -i ./multinode deploy
  become: true


